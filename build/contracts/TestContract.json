{
  "contractName": "TestContract",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_disputeFeeRequired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_disputePeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "_requestIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_granularity",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_svalue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_evalue",
          "type": "uint256"
        }
      ],
      "name": "ContractSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "NewValueSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TellorValuePlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_disputer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "ValueDisputed",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTip",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "addTipWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractEnded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputeFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "disputeOptimisticValue",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputePeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "disputedValues",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endDateTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getAnyDataAfter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_ifRetrieve",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getCurrentValue",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ifRetrieve",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDisputedValueByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDisputedValues",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getFirstUndisputedValueAfter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getFirstVerifiedDataAfter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getIsValue",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMyValuesByTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNumberOfDisputedValues",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getNumberOfValuesPerTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRequestIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getRequestIdsIncluded",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getTellorValues",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_didGet",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimestamps",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "isDisputed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isValue",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "longWins",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_request",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_request",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_granularity",
          "type": "uint256"
        }
      ],
      "name": "requestDataWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requestIdsIncluded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_bytesId",
          "type": "bytes32"
        }
      ],
      "name": "resultFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "outcome",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "status",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_userContract",
          "type": "address"
        }
      ],
      "name": "setUserContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setValue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startDateTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "setContractDetails",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "settleContracts",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_disputeFeeRequired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_disputePeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_requestIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_granularity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_svalue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_evalue\",\"type\":\"uint256\"}],\"name\":\"ContractSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"NewValueSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TellorValuePlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ValueDisputed\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"addTipWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"disputeFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"disputeOptimisticValue\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"disputePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputedValues\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getAnyDataAfter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_ifRetrieve\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getCurrentValue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ifRetrieve\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDisputedValueByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDisputedValues\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getFirstUndisputedValueAfter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getFirstVerifiedDataAfter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getIsValue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMyValuesByTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumberOfDisputedValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getNumberOfValuesPerTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRequestIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getRequestIdsIncluded\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getTellorValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_didGet\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTimestamps\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isDisputed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isValue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"longWins\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_request\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_granularity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_request\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_granularity\",\"type\":\"uint256\"}],\"name\":\"requestDataWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestIdsIncluded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_bytesId\",\"type\":\"bytes32\"}],\"name\":\"resultFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"outcome\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"status\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"setContractDetails\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userContract\",\"type\":\"address\"}],\"name\":\"setUserContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"settleContracts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addTip(uint256,uint256)\":{\"details\":\"Allows the user to tip miners for the specified request using Tributes\",\"params\":{\"_requestId\":\"to tip\",\"_tip\":\"amount\"}},\"addTipWithEther(uint256)\":{\"details\":\"Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes at the price specified by the userContract owner.\",\"params\":{\"_requestId\":\"to tip\"}},\"constructor\":{\"details\":\"This constructor function is used to pass variables to the optimistic contract's constructor and the function is blank\",\"params\":{\"_disputeFeeRequired\":\"the fee to dispute the optimistic price(price sumbitted by known trusted party)\",\"_disputePeriod\":\"is the time frame a value can be disputed after being imputed\",\"_granularity\":\"is the amount of decimals desired on the requested value\",\"_requestIds\":\"are the requests Id's on the Tellor System corresponding to the data types used on this contract. It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor System be sure to create some.\",\"_userContract\":\"address for UserContract\"}},\"disputeOptimisticValue(uint256)\":{\"details\":\"allows user to initiate dispute on the value of the specified timestamp\",\"params\":{\"_timestamp\":\"is the timestamp for the value to be disputed\"}},\"getAnyDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first value for the requestId after the specified timestamp\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\",\"_timestamp\":\"after which to search for first verified value\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\"},\"getCurrentValue()\":{\"details\":\"Getter function for latest value available\",\"return\":\"latest value available\"},\"getCurrentValue(uint256)\":{\"details\":\"Allows the user to get the latest value for the requestId specified\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\"},\"getDisputedValueByIndex(uint256)\":{\"details\":\"Getter function for the dispute value by index\",\"return\":\"the value\"},\"getDisputedValues()\":{\"details\":\"Getter function for all disputed values\",\"return\":\"the array with all values under dispute\"},\"getFirstUndisputedValueAfter(uint256)\":{\"details\":\"Get the first undisputed value after the timestamp specified. This function is used within the getTellorValues but can be used on its own.\",\"params\":{\"_timestamp\":\"to search the first undisputed value there after\"}},\"getFirstVerifiedDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first verified value for the requestId after the specified timestamp\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\",\"_timestamp\":\"after which to search for first verified value\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after which it searched for the first verified value\"},\"getIsValue(uint256)\":{\"details\":\"Checks to if a value exists for the specifived timestamp\",\"params\":{\"_timestamp\":\"to verify\"},\"return\":\"ture if it exists\"},\"getMyValuesByTimestamp(uint256)\":{\"details\":\"Getter function for the value based on the timestamp specified\",\"params\":{\"_timestamp\":\"to retreive value from\"}},\"getNumberOfDisputedValues()\":{\"details\":\"Getter function for the number of disputed values\",\"return\":\"uint count of number of values for the spedified timestamp\"},\"getNumberOfValuesPerTimestamp(uint256)\":{\"details\":\"Getter function for the number of RequestIds associated with a timestamp, based on the timestamp specified\",\"params\":{\"_timestamp\":\"to retreive number of requestIds\"},\"return\":\"uint count of number of values for the spedified timestamp\"},\"getRequestIds()\":{\"details\":\"Getter function for the requests Ids' from Tellor associated with this price feed\",\"return\":\"uint array of requests Ids'\"},\"getRequestIdsIncluded(uint256)\":{\"details\":\"Getter function for the requests Ids' from Tellor associated with this price feed at the specified timestamp. This only gets populated after a dispute is initiated and the function getTellorValues is ran.\",\"params\":{\"_timestamp\":\"to retreive the requestIds\"},\"return\":\"uint array of requests Ids' included in the calcluation of the value\"},\"getTellorValues(uint256)\":{\"details\":\"This function gets the Tellor requestIds values for the disputed timestamp. It averages the values on the requestsIds and replaces the value set by the contract owner, centralized party.\",\"params\":{\"_timestamp\":\"to get Tellor data from\"},\"return\":\"uint of new value and true if it was able to get Tellor data\"},\"getTimestamps()\":{\"details\":\"Getter function for the timestamps available\",\"return\":\"uint array of timestamps available\"},\"isDisputed(uint256)\":{\"details\":\"This checks if the value for the specified timestamp is under dispute\",\"params\":{\"_timestamp\":\"to check if it is under dispute\"},\"return\":\"true if it is under dispute\"},\"requestData(string,string,uint256,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using Tributes Allowing this prevents us from increasing spread too high (since if we set the price too hight users will just go to an exchange and get tokens from there)\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\",\"_request\":\"string API being requested to be mined\",\"_symbol\":\"is the short string symbol for the api request\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool\"}},\"requestDataWithEther(string,string,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using ETH\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\",\"_request\":\"string API being requested to be mined\",\"_symbol\":\"is the short string symbol for the api request\"}},\"resultFor(bytes32)\":{\"details\":\"Allows the user to get the latest value for the requestId specified using the  ADO specification for the standard inteface for price oracles\",\"params\":{\"_bytesId\":\"is the ADO standarized bytes32 price/key value pair identifier\"},\"return\":\"the timestamp, outcome or value/ and the status code (for retreived, null, etc...)\"},\"setContractDetails(uint256)\":{\"details\":\"creates a start(now) and end time(now + duration specified) for testing a contract start and end period\",\"params\":{\"_duration\":\"in seconds\"}},\"setUserContract(address)\":{\"details\":\"allows owner to set the user contract address\",\"params\":{\"_userContract\":\"address\"}},\"setValue(uint256,uint256)\":{\"details\":\"allows contract owner, a centralized party to enter value\",\"params\":{\"_timestamp\":\"is the timestamp for the value\",\"_value\":\"is the value for the timestamp specified\"}},\"settleContracts()\":{\"details\":\"testing fucntion that settles the contract by getting the first undisputed value after the startDateTime and the first undisputed value after the end time of the contract and settleling(payin off) it.\"},\"transferOwnership(address)\":{\"details\":\"allows owner to transfer ownership\",\"params\":{\"_newOwner\":\"address\"}},\"withdrawETH()\":{\"details\":\"Allows the contract owner(Tellor) to withdraw ETH from this contract\"}},\"title\":\"Reader This contracts is a pretend contract using Tellor that compares two time values\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/testContracts/TestContract.sol\":\"TestContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/Optimistic.sol\":{\"keccak256\":\"0xe63ef23d76001e7845d2babf069ee23d4b92237ceeeb74325a701ad009ece64c\",\"urls\":[\"bzz-raw://7f6e789a1b3772d44ccfac518dc65ddb617786f28106c0d72bea08c6ef70374e\",\"dweb:/ipfs/QmeHQb1xwyZtZxUacmcZsSrD1g5nih3wVcDUv7Bp9XhBsA\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/OracleIDDescriptions.sol\":{\"keccak256\":\"0x75dd9f9d70302117fd80800c5dc84fca0a31b92fd92f7e5598b99d09d25bbb7d\",\"urls\":[\"bzz-raw://9a6547b017d857fe00b3ae54e34d2cc621e8abeabbeb941ae4767726e0186bd1\",\"dweb:/ipfs/QmWTgnpMktKLAeMS3jKDUDYNT2DrMg5CyeX7ELRK1yPbFa\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/UserContract.sol\":{\"keccak256\":\"0x9e282e223f09debe50676c8380ac1e3eaf899d0496780a8f6a5ae526285ad757\",\"urls\":[\"bzz-raw://beb48e032b45037d6f47821eb1c144b8dbeac86269b9df1c3269340a93d2eb87\",\"dweb:/ipfs/QmV5SP7DeV5VahwVtFid2JzBak5h1FKWjwRyQzRedeyVhr\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/UsingTellor.sol\":{\"keccak256\":\"0x18392c438cee36addcdda91feed4d5bedfc32f6feb171346409cd85d0cc97ef1\",\"urls\":[\"bzz-raw://bf034a6880b1eb2a4a95313016e50937bcb0afb434095a9d5de904d9d9ce6d1a\",\"dweb:/ipfs/QmcAPnHD2WfFYMeaXwvzMMKhdAx36SeyPJ2NJ2Vc3tTBR2\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/interfaces/ADOInterface.sol\":{\"keccak256\":\"0xcf2058e8e9b4a8f01f7ec06f6c5483bbae3799a60c3c99a157f2c0a25187895d\",\"urls\":[\"bzz-raw://420c5025430cb45ca70ca60e95cf7befee6f136f70e7e768cdb7042fd306157e\",\"dweb:/ipfs/QmcDdGGw3ZHpwyNpQAKdWHHsZyBiH3HqNT4mZSHcUtr1xM\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x835569f11965799f14a74288c6b76a8f6723c0b4bc45ba767e5ad060e71d704f\",\"urls\":[\"bzz-raw://f5e35cc92a4ba050ca58136d229b4182f4a10cf5385a9d6c2915ac98c86100f9\",\"dweb:/ipfs/QmdYoonWK5ChR7iQwXmb4838WyCEpSuy7indxqMdWWvaQd\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/libraries/TellorGettersLibrary.sol\":{\"keccak256\":\"0xd7ba7aeb64a7eb89c3d02be1b4a11e9815d491cac3b71c669cb7c537ca5ba5d1\",\"urls\":[\"bzz-raw://9c663c948a8a527ca8699951d69925eb1fb67bed2084083b5a2852b8c0c490a2\",\"dweb:/ipfs/QmRQDLLUba4RKQJbZtr8pWLcHioWYtaNUecEBFbiygM48J\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/libraries/TellorLibrary.sol\":{\"keccak256\":\"0x6542cd93b5412ed864fced079bf3a9c3321a283ed291e047c3fc0e5f90b30a1e\",\"urls\":[\"bzz-raw://88fe1735d4f5dc75ed86a943e9d15a0698ce4ecb127a56e3b0d0c64b5d13d485\",\"dweb:/ipfs/QmPAqSsoAkEVxchiHyeqJWP5mKediowSDikQf4vnJ3VCka\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/libraries/TellorStorage.sol\":{\"keccak256\":\"0x15634e54d282ec350c3a9e0c6f7bfeb73121d7fbe6c1ed03ca594f984af87925\",\"urls\":[\"bzz-raw://10dfcb013ba31da2cd61b37fee8416f8b20fd015ab3692b09f4af36144225dc5\",\"dweb:/ipfs/QmZk2yuFJY8j4b2RGhYSKvaTmM5Y2BedaiFvqoi5Rkw3Jd\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/libraries/TellorTransfer.sol\":{\"keccak256\":\"0x3b0033957aed6e8b43e01b2d203aab9e7868ba5c873c219dc80f3a3e55a3c212\",\"urls\":[\"bzz-raw://ac862dadd4c2478c5a2c6a5dc92d59b308981fd1b479ef9bf84356e6fa0ccf47\",\"dweb:/ipfs/QmTjwyYmJyXaodVwfsWDeaqFQJgAf1hakXq6RbnYB966vB\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/libraries/Utilities.sol\":{\"keccak256\":\"0xa4fddaeaf9246f07e7464bc7936ea47431316d96dc426e2daef9e4dab796bd4a\",\"urls\":[\"bzz-raw://cf4501bed73eba3f8ad6c27d6249c6626231174cb3132ffe7199a9583624853d\",\"dweb:/ipfs/QmSmUdiVZQS8pExqtXo6JZaGKeaMpN2YbpdwKK3YJ2PTkW\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/testContracts/Tellor.sol\":{\"keccak256\":\"0x093f2af8a4895fde683ea5194dab9b9f408c7de54b4b6960000994aba4544216\",\"urls\":[\"bzz-raw://2ffed0ba4acb050177dbe7b2b8ef09f5a81b60fab105e0ce931ebdd01b95849c\",\"dweb:/ipfs/QmNxbknQF2yGMVkAZ9DYkh2cHU2frVWf4udiUBRtG6xtwd\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/testContracts/TellorGetters.sol\":{\"keccak256\":\"0x8a56763f5095c975d6b9e059121932a0ea9ea0e2d0b5cc5f1b2646f4b1895120\",\"urls\":[\"bzz-raw://e4c101d7e2523f989b5bd301a2e9c70e03120d524b191fe2c57c461df5e6e3b1\",\"dweb:/ipfs/QmVb88FKNhkajBtkbfh6pr1eBpAw7PkwUfrxY5ZmXoGT4f\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/testContracts/TellorMaster.sol\":{\"keccak256\":\"0x9dc2a851f8369db9f09965dacfe18ba4c5d22fffc3bfade51f3c56e76c36a46c\",\"urls\":[\"bzz-raw://f7019783a10aa420a223b67380df8f059dd51d9fa231be318fcbbeb0273984e1\",\"dweb:/ipfs/QmcAJd2TPVXFJ8cnCbxi1W3FCoYAQz4pvfJWPqjDybLLdJ\"]},\"/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/testContracts/TestContract.sol\":{\"keccak256\":\"0x23dd9b216d9a58493b991fef13266ad46a509266e43ad5019fefc47d6d9fb7d2\",\"urls\":[\"bzz-raw://b7ed16c36bd67cb8b34faf965423d57dded20756262fa25e23c9a113e4472470\",\"dweb:/ipfs/QmRdRJv3RAmjvdDTPjLFk5ZTQW41cYnbEjzxfErnyQiZCb\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620031a8380380620031a8833981810160405260a08110156200003757600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805160405193929190846401000000008211156200007657600080fd5b838201915060208201858111156200008d57600080fd5b8251866020820283011164010000000082111715620000ab57600080fd5b8083526020830192505050908051906020019060200280838360005b83811015620000e4578082015181840152602081019050620000c7565b5050505090500160405260200180519060200190929190505050848484848484806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505083600a8190555082600b81905550806009819055508160079080519060200190620001b3929190620001c4565b50505050505050505050506200023e565b82805482825590600052602060002090810192821562000203579160200282015b8281111562000202578251825591602001919060010190620001e5565b5b50905062000212919062000216565b5090565b6200023b91905b80821115620002375760008160009055506001016200021d565b5090565b90565b612f5a806200024e6000396000f3fe6080604052600436106102465760003560e01c806371d8dd1911610139578063ac33a273116100b6578063d09cc57e1161007a578063d09cc57e14610de9578063d269a83c14610e46578063dc7ebf0e14610eb1578063e086e5ec14610f41578063e631def714610f58578063f2fde38b14610fa757610246565b8063ac33a27314610b5b578063b63f210a14610bc7578063b9ce896b14610c33578063bad4d21e14610c5e578063bb19e29614610c8d57610246565b806387105801116100fd5780638710580114610a1a5780638da5cb5b14610a3157806391bf116f14610a885780639a64f07014610ab7578063a1206d4e14610b0a57610246565b806371d8dd19146108c3578063752d49a114610912578063775f75df146109575780637b8d56e3146109825780637ccc586e146109c757610246565b80633f35ff32116101c757806359abbfe41161018b57806359abbfe4146107355780635bf31d4d146107a15780635f059f3e146107cc578063681012e51461083757806369949a861461086257610246565b80633f35ff32146104b25780633fcad964146104dd5780633fff28161461053e578063550921d4146106b1578063556f0dc71461070a57610246565b80632aa0bc1f1161020e5780632aa0bc1f1461035757806331562d69146103a657806336e9d632146103e157806337ae9e43146104345780633c9177cd1461048757610246565b8063062777ff1461024b5780630f76c114146102a557806316e72abb146102d05780632639e0b0146102fb578063292b8cce14610329575b600080fd5b34801561025757600080fd5b506102846004803603602081101561026e57600080fd5b8101908080359060200190929190505050610ff8565b60405180838152602001821515151581526020019250505060405180910390f35b3480156102b157600080fd5b506102ba6115af565b6040518082815260200191505060405180910390f35b3480156102dc57600080fd5b506102e5611658565b6040518082815260200191505060405180910390f35b6103276004803603602081101561031157600080fd5b810190808035906020019092919050505061165e565b005b6103556004803603602081101561033f57600080fd5b81019080803590602001909291905050506116ee565b005b34801561036357600080fd5b506103906004803603602081101561037a57600080fd5b8101908080359060200190929190505050611944565b6040518082815260200191505060405180910390f35b3480156103b257600080fd5b506103df600480360360208110156103c957600080fd5b8101908080359060200190929190505050611964565b005b3480156103ed57600080fd5b5061041a6004803603602081101561040457600080fd5b8101908080359060200190929190505050611991565b604051808215151515815260200191505060405180910390f35b34801561044057600080fd5b5061046d6004803603602081101561045757600080fd5b81019080803590602001909291905050506119b1565b604051808215151515815260200191505060405180910390f35b34801561049357600080fd5b5061049c6119d1565b6040518082815260200191505060405180910390f35b3480156104be57600080fd5b506104c76119d7565b6040518082815260200191505060405180910390f35b3480156104e957600080fd5b506105166004803603602081101561050057600080fd5b81019080803590602001909291905050506119dd565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561054a57600080fd5b506106af6004803603608081101561056157600080fd5b810190808035906020019064010000000081111561057e57600080fd5b82018360208201111561059057600080fd5b803590602001918460018302840111640100000000831117156105b257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561061557600080fd5b82018360208201111561062757600080fd5b8035906020019184600183028401116401000000008311171561064957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190505050611ab0565b005b3480156106bd57600080fd5b506106f4600480360360408110156106d457600080fd5b810190808035906020019092919080359060200190929190505050611e1c565b6040518082815260200191505060405180910390f35b34801561071657600080fd5b5061071f611e4a565b6040518082815260200191505060405180910390f35b34801561074157600080fd5b5061074a611e50565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561078d578082015181840152602081019050610772565b505050509050019250505060405180910390f35b3480156107ad57600080fd5b506107b6611ea8565b6040518082815260200191505060405180910390f35b3480156107d857600080fd5b5061080f600480360360408110156107ef57600080fd5b810190808035906020019092919080359060200190929190505050611eae565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561084357600080fd5b5061084c611f89565b6040518082815260200191505060405180910390f35b34801561086e57600080fd5b5061089b6004803603602081101561088557600080fd5b8101908080359060200190929190505050611f96565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b3480156108cf57600080fd5b506108fc600480360360208110156108e657600080fd5b8101908080359060200190929190505050612092565b6040518082815260200191505060405180910390f35b34801561091e57600080fd5b506109556004803603604081101561093557600080fd5b8101908080359060200190929190803590602001909291905050506120b3565b005b34801561096357600080fd5b5061096c612339565b6040518082815260200191505060405180910390f35b34801561098e57600080fd5b506109c5600480360360408110156109a557600080fd5b81019080803590602001909291908035906020019092919050505061233f565b005b3480156109d357600080fd5b50610a00600480360360208110156109ea57600080fd5b8101908080359060200190929190505050612530565b604051808215151515815260200191505060405180910390f35b348015610a2657600080fd5b50610a2f61255a565b005b348015610a3d57600080fd5b50610a4661262f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a9457600080fd5b50610a9d612655565b604051808215151515815260200191505060405180910390f35b348015610ac357600080fd5b50610af060048036036020811015610ada57600080fd5b8101908080359060200190929190505050612668565b604051808215151515815260200191505060405180910390f35b348015610b1657600080fd5b50610b5960048036036020811015610b2d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612692565b005b348015610b6757600080fd5b50610b70612798565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610bb3578082015181840152602081019050610b98565b505050509050019250505060405180910390f35b348015610bd357600080fd5b50610bdc6127f0565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c1f578082015181840152602081019050610c04565b505050509050019250505060405180910390f35b348015610c3f57600080fd5b50610c48612848565b6040518082815260200191505060405180910390f35b348015610c6a57600080fd5b50610c7361284e565b604051808215151515815260200191505060405180910390f35b610de760048036036060811015610ca357600080fd5b8101908080359060200190640100000000811115610cc057600080fd5b820183602082011115610cd257600080fd5b80359060200191846001830284011164010000000083111715610cf457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d5757600080fd5b820183602082011115610d6957600080fd5b80359060200191846001830284011164010000000083111715610d8b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050612861565b005b348015610df557600080fd5b50610e2260048036036020811015610e0c57600080fd5b81019080803590602001909291905050506129cd565b60405180848152602001838152602001828152602001935050505060405180910390f35b348015610e5257600080fd5b50610e8960048036036040811015610e6957600080fd5b810190808035906020019092919080359060200190929190505050612aa0565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b348015610ebd57600080fd5b50610eea60048036036020811015610ed457600080fd5b8101908080359060200190929190505050612b7b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610f2d578082015181840152602081019050610f12565b505050509050019250505060405180910390f35b348015610f4d57600080fd5b50610f56612be6565b005b348015610f6457600080fd5b50610f9160048036036020811015610f7b57600080fd5b8101908080359060200190929190505050612d14565b6040518082815260200191505060405180910390f35b348015610fb357600080fd5b50610ff660048036036020811015610fca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d31565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561106457600080fd5b505afa158015611078573d6000803e3d6000fd5b505050506040513d602081101561108e57600080fd5b8101908080519060200190929190505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561110a57600080fd5b505afa15801561111e573d6000803e3d6000fd5b505050506040513d602081101561113457600080fd5b810190808051906020019092919050505090506000808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156111c757600080fd5b505afa1580156111db573d6000803e3d6000fd5b505050506040513d60208110156111f157600080fd5b810190808051906020019092919050505090506000600190505b60078054905081116115a5576112218189611eae565b8095508199508298505050508515611451576000600954848161124057fe5b06840390506000600160056000848152602001908152602001600020805490500160056000848152602001908152602001600020805490506003600085815260200190815260200160002054028a018161129657fe5b0490508060036000848152602001908152602001600020819055507f11d6fa234e47ea0871bd2e6efeb4e7be326a7216c36990b799a61a501cfcf1c38282604051808381526020018281526020019250505060405180910390a160056000838152602001908152602001600020839080600181540180825580915050906001820390600052602060002001600090919290919091505550600015156002600084815260200190815260200160002060009054906101000a900460ff16151514156113ef57600682908060018154018082558091505090600182039060005260206000200160009091929091909150555060016002600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c08a6040518082815260200191505060405180910390a261144a565b600115156004600084815260200190815260200160002060009054906101000a900460ff16151514156114495760006004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b5050611598565b6007805490508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156114d457600080fd5b505afa1580156114e8573d6000803e3d6000fd5b505050506040513d60208110156114fe57600080fd5b81019080805190602001909291905050501115611597578373ffffffffffffffffffffffffffffffffffffffff1663752d49a182600780549050858161154057fe5b046040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561157e57600080fd5b505af1158015611592573d6000803e3d6000fd5b505050505b5b808060010191505061120b565b5050505050915091565b6000806006805490501161162b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f54696d657374616d707327206c656e677468206973203000000000000000000081525060200191505060405180910390fd5b61165360066001600680549050038154811061164357fe5b9060005260206000200154612d14565b905090565b600f5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632639e0b034836040518363ffffffff1660e01b8152600401808281526020019150506000604051808303818588803b1580156116d257600080fd5b505af11580156116e6573d6000803e3d6000fd5b505050505050565b600a54341015611766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f56616c75652069732062656c6f7720646973707574652066656500000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060009054906101000a900460ff166117dc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612ef26034913960400191505060405180910390fd5b600b54810160095442816117ec57fe5b0642031115611863576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4469737075746520706572696f6420697320636c6f736564000000000000000081525060200191505060405180910390fd5b60016004600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055507fb199747b7b98ffd681a09c542f7f62ba4972f6f5b7d791b6f8bba36862cbdd2b33826003600085815260200190815260200160002054604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b600060056000838152602001908152602001600020805490509050919050565b600954428161196f57fe5b064203600c8190555080600954428161198457fe5b06420301600d8190555050565b60026020528060005260406000206000915054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600d5481565b600e5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633fcad964856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b158015611a5457600080fd5b505afa158015611a68573d6000803e3d6000fd5b505050506040513d6060811015611a7e57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015611b1957600080fd5b505afa158015611b2d573d6000803e3d6000fd5b505050506040513d6020811015611b4357600080fd5b810190808051906020019092919050505090506000821115611cc8578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611c1a57600080fd5b505af1158015611c2e573d6000803e3d6000fd5b505050506040513d6020811015611c4457600080fd5b8101908080519060200190929190505050611cc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff2816868686866040518563ffffffff1660e01b8152600401808060200180602001858152602001848152602001838103835287818151815260200191508051906020019080838360005b83811015611d47578082015181840152602081019050611d2c565b50505050905090810190601f168015611d745780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b83811015611dad578082015181840152602081019050611d92565b50505050905090810190601f168015611dda5780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611dfd57600080fd5b505af1158015611e11573d6000803e3d6000fd5b505050505050505050565b60056020528160005260406000208181548110611e3557fe5b90600052602060002001600091509150505481565b60095481565b60606006805480602002602001604051908101604052809291908181526020018280548015611e9e57602002820191906000526020600020905b815481526020019060010190808311611e8a575b5050505050905090565b600b5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f059f3e86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015611f2d57600080fd5b505afa158015611f41573d6000803e3d6000fd5b505050506040513d6060811015611f5757600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6000600880549050905090565b600080600080600680549050905060008111156120785760008190505b6000811115612055578560066001830381548110611fcd57fe5b9060005260206000200154101580156120245750600015156004600060066001850381548110611ff957fe5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff161515145b15612047576006600182038154811061203957fe5b906000526020600020015492505b808060019003915050611fb3565b50600082111561207757600161206a83612d14565b839350935093505061208b565b5b6000806000819150809050935093509350505b9193909250565b6000600882815481106120a157fe5b90600052602060002001549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561211c57600080fd5b505afa158015612130573d6000803e3d6000fd5b505050506040513d602081101561214657600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561221457600080fd5b505af1158015612228573d6000803e3d6000fd5b505050506040513d602081101561223e57600080fd5b81019080805190602001909291905050506122c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561231c57600080fd5b505af1158015612330573d6000803e3d6000fd5b50505050505050565b600c5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b6000151561240f83612668565b151514612484576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f54696d657374616d7020697320616c726561647920736574000000000000000081525060200191505060405180910390fd5b80600360008481526020019081526020016000208190555060016002600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506006829080600181540180825580915050906001820390600052602060002001600090919290919091505550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c0826040518082815260200191505060405180910390a25050565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b600080612568600c54611f96565b600e60008295508391905055829450505050811561262b5761258b600d54611f96565b600f60008295508391905055829450505050811561262a57600e54600f5411156125cb576001601060006101000a81548160ff0219169083151502179055505b6001601060016101000a81548160ff0219169083151502179055507fbbdea414ca4370d674fd5e370fbc6d7da2dafff34ec019faaf1c36b1180a314b600e54600f54604051808381526020018281526020019250505060405180910390a15b5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060019054906101000a900460ff1681565b60006002600083815260200190815260200160002060009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612755576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060078054806020026020016040519081016040528092919081815260200182805480156127e657602002820191906000526020600020905b8154815260200190600101908083116127d2575b5050505050905090565b6060600880548060200260200160405190810160405280929190818152602001828054801561283e57602002820191906000526020600020905b81548152602001906001019080831161282a575b5050505050905090565b600a5481565b601060009054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb19e296348585856040518563ffffffff1660e01b8152600401808060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156128fb5780820151818401526020810190506128e0565b50505050905090810190601f1680156129285780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612961578082015181840152602081019050612946565b50505050905090810190601f16801561298e5780820380516001836020036101000a031916815260200191505b50955050505050506000604051808303818588803b1580156129af57600080fd5b505af11580156129c3573d6000803e3d6000fd5b5050505050505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d09cc57e856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b158015612a4457600080fd5b505afa158015612a58573d6000803e3d6000fd5b505050506040513d6060811015612a6e57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d269a83c86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015612b1f57600080fd5b505afa158015612b33573d6000803e3d6000fd5b505050506040513d6060811015612b4957600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b606060056000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612bda57602002820191906000526020600020905b815481526020019060010190808311612bc6575b50505050509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612ca9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015612d11573d6000803e3d6000fd5b50565b600060036000838152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612df4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe56616c756520666f72207468652074696d657374616d70206265696e6720646973707574656420646f65736e2774206578697374a265627a7a7231582013840bfd831d1175d619b958642172cdf41cf10e88535e6a46e66d42a83191f764736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106102465760003560e01c806371d8dd1911610139578063ac33a273116100b6578063d09cc57e1161007a578063d09cc57e14610de9578063d269a83c14610e46578063dc7ebf0e14610eb1578063e086e5ec14610f41578063e631def714610f58578063f2fde38b14610fa757610246565b8063ac33a27314610b5b578063b63f210a14610bc7578063b9ce896b14610c33578063bad4d21e14610c5e578063bb19e29614610c8d57610246565b806387105801116100fd5780638710580114610a1a5780638da5cb5b14610a3157806391bf116f14610a885780639a64f07014610ab7578063a1206d4e14610b0a57610246565b806371d8dd19146108c3578063752d49a114610912578063775f75df146109575780637b8d56e3146109825780637ccc586e146109c757610246565b80633f35ff32116101c757806359abbfe41161018b57806359abbfe4146107355780635bf31d4d146107a15780635f059f3e146107cc578063681012e51461083757806369949a861461086257610246565b80633f35ff32146104b25780633fcad964146104dd5780633fff28161461053e578063550921d4146106b1578063556f0dc71461070a57610246565b80632aa0bc1f1161020e5780632aa0bc1f1461035757806331562d69146103a657806336e9d632146103e157806337ae9e43146104345780633c9177cd1461048757610246565b8063062777ff1461024b5780630f76c114146102a557806316e72abb146102d05780632639e0b0146102fb578063292b8cce14610329575b600080fd5b34801561025757600080fd5b506102846004803603602081101561026e57600080fd5b8101908080359060200190929190505050610ff8565b60405180838152602001821515151581526020019250505060405180910390f35b3480156102b157600080fd5b506102ba6115af565b6040518082815260200191505060405180910390f35b3480156102dc57600080fd5b506102e5611658565b6040518082815260200191505060405180910390f35b6103276004803603602081101561031157600080fd5b810190808035906020019092919050505061165e565b005b6103556004803603602081101561033f57600080fd5b81019080803590602001909291905050506116ee565b005b34801561036357600080fd5b506103906004803603602081101561037a57600080fd5b8101908080359060200190929190505050611944565b6040518082815260200191505060405180910390f35b3480156103b257600080fd5b506103df600480360360208110156103c957600080fd5b8101908080359060200190929190505050611964565b005b3480156103ed57600080fd5b5061041a6004803603602081101561040457600080fd5b8101908080359060200190929190505050611991565b604051808215151515815260200191505060405180910390f35b34801561044057600080fd5b5061046d6004803603602081101561045757600080fd5b81019080803590602001909291905050506119b1565b604051808215151515815260200191505060405180910390f35b34801561049357600080fd5b5061049c6119d1565b6040518082815260200191505060405180910390f35b3480156104be57600080fd5b506104c76119d7565b6040518082815260200191505060405180910390f35b3480156104e957600080fd5b506105166004803603602081101561050057600080fd5b81019080803590602001909291905050506119dd565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561054a57600080fd5b506106af6004803603608081101561056157600080fd5b810190808035906020019064010000000081111561057e57600080fd5b82018360208201111561059057600080fd5b803590602001918460018302840111640100000000831117156105b257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561061557600080fd5b82018360208201111561062757600080fd5b8035906020019184600183028401116401000000008311171561064957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190929190505050611ab0565b005b3480156106bd57600080fd5b506106f4600480360360408110156106d457600080fd5b810190808035906020019092919080359060200190929190505050611e1c565b6040518082815260200191505060405180910390f35b34801561071657600080fd5b5061071f611e4a565b6040518082815260200191505060405180910390f35b34801561074157600080fd5b5061074a611e50565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561078d578082015181840152602081019050610772565b505050509050019250505060405180910390f35b3480156107ad57600080fd5b506107b6611ea8565b6040518082815260200191505060405180910390f35b3480156107d857600080fd5b5061080f600480360360408110156107ef57600080fd5b810190808035906020019092919080359060200190929190505050611eae565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561084357600080fd5b5061084c611f89565b6040518082815260200191505060405180910390f35b34801561086e57600080fd5b5061089b6004803603602081101561088557600080fd5b8101908080359060200190929190505050611f96565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b3480156108cf57600080fd5b506108fc600480360360208110156108e657600080fd5b8101908080359060200190929190505050612092565b6040518082815260200191505060405180910390f35b34801561091e57600080fd5b506109556004803603604081101561093557600080fd5b8101908080359060200190929190803590602001909291905050506120b3565b005b34801561096357600080fd5b5061096c612339565b6040518082815260200191505060405180910390f35b34801561098e57600080fd5b506109c5600480360360408110156109a557600080fd5b81019080803590602001909291908035906020019092919050505061233f565b005b3480156109d357600080fd5b50610a00600480360360208110156109ea57600080fd5b8101908080359060200190929190505050612530565b604051808215151515815260200191505060405180910390f35b348015610a2657600080fd5b50610a2f61255a565b005b348015610a3d57600080fd5b50610a4661262f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a9457600080fd5b50610a9d612655565b604051808215151515815260200191505060405180910390f35b348015610ac357600080fd5b50610af060048036036020811015610ada57600080fd5b8101908080359060200190929190505050612668565b604051808215151515815260200191505060405180910390f35b348015610b1657600080fd5b50610b5960048036036020811015610b2d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612692565b005b348015610b6757600080fd5b50610b70612798565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610bb3578082015181840152602081019050610b98565b505050509050019250505060405180910390f35b348015610bd357600080fd5b50610bdc6127f0565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c1f578082015181840152602081019050610c04565b505050509050019250505060405180910390f35b348015610c3f57600080fd5b50610c48612848565b6040518082815260200191505060405180910390f35b348015610c6a57600080fd5b50610c7361284e565b604051808215151515815260200191505060405180910390f35b610de760048036036060811015610ca357600080fd5b8101908080359060200190640100000000811115610cc057600080fd5b820183602082011115610cd257600080fd5b80359060200191846001830284011164010000000083111715610cf457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d5757600080fd5b820183602082011115610d6957600080fd5b80359060200191846001830284011164010000000083111715610d8b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050612861565b005b348015610df557600080fd5b50610e2260048036036020811015610e0c57600080fd5b81019080803590602001909291905050506129cd565b60405180848152602001838152602001828152602001935050505060405180910390f35b348015610e5257600080fd5b50610e8960048036036040811015610e6957600080fd5b810190808035906020019092919080359060200190929190505050612aa0565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b348015610ebd57600080fd5b50610eea60048036036020811015610ed457600080fd5b8101908080359060200190929190505050612b7b565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610f2d578082015181840152602081019050610f12565b505050509050019250505060405180910390f35b348015610f4d57600080fd5b50610f56612be6565b005b348015610f6457600080fd5b50610f9160048036036020811015610f7b57600080fd5b8101908080359060200190929190505050612d14565b6040518082815260200191505060405180910390f35b348015610fb357600080fd5b50610ff660048036036020811015610fca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612d31565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561106457600080fd5b505afa158015611078573d6000803e3d6000fd5b505050506040513d602081101561108e57600080fd5b8101908080519060200190929190505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561110a57600080fd5b505afa15801561111e573d6000803e3d6000fd5b505050506040513d602081101561113457600080fd5b810190808051906020019092919050505090506000808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156111c757600080fd5b505afa1580156111db573d6000803e3d6000fd5b505050506040513d60208110156111f157600080fd5b810190808051906020019092919050505090506000600190505b60078054905081116115a5576112218189611eae565b8095508199508298505050508515611451576000600954848161124057fe5b06840390506000600160056000848152602001908152602001600020805490500160056000848152602001908152602001600020805490506003600085815260200190815260200160002054028a018161129657fe5b0490508060036000848152602001908152602001600020819055507f11d6fa234e47ea0871bd2e6efeb4e7be326a7216c36990b799a61a501cfcf1c38282604051808381526020018281526020019250505060405180910390a160056000838152602001908152602001600020839080600181540180825580915050906001820390600052602060002001600090919290919091505550600015156002600084815260200190815260200160002060009054906101000a900460ff16151514156113ef57600682908060018154018082558091505090600182039060005260206000200160009091929091909150555060016002600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c08a6040518082815260200191505060405180910390a261144a565b600115156004600084815260200190815260200160002060009054906101000a900460ff16151514156114495760006004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b5050611598565b6007805490508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156114d457600080fd5b505afa1580156114e8573d6000803e3d6000fd5b505050506040513d60208110156114fe57600080fd5b81019080805190602001909291905050501115611597578373ffffffffffffffffffffffffffffffffffffffff1663752d49a182600780549050858161154057fe5b046040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561157e57600080fd5b505af1158015611592573d6000803e3d6000fd5b505050505b5b808060010191505061120b565b5050505050915091565b6000806006805490501161162b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f54696d657374616d707327206c656e677468206973203000000000000000000081525060200191505060405180910390fd5b61165360066001600680549050038154811061164357fe5b9060005260206000200154612d14565b905090565b600f5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632639e0b034836040518363ffffffff1660e01b8152600401808281526020019150506000604051808303818588803b1580156116d257600080fd5b505af11580156116e6573d6000803e3d6000fd5b505050505050565b600a54341015611766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f56616c75652069732062656c6f7720646973707574652066656500000000000081525060200191505060405180910390fd5b6002600082815260200190815260200160002060009054906101000a900460ff166117dc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526034815260200180612ef26034913960400191505060405180910390fd5b600b54810160095442816117ec57fe5b0642031115611863576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4469737075746520706572696f6420697320636c6f736564000000000000000081525060200191505060405180910390fd5b60016004600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055507fb199747b7b98ffd681a09c542f7f62ba4972f6f5b7d791b6f8bba36862cbdd2b33826003600085815260200190815260200160002054604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b600060056000838152602001908152602001600020805490509050919050565b600954428161196f57fe5b064203600c8190555080600954428161198457fe5b06420301600d8190555050565b60026020528060005260406000206000915054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600d5481565b600e5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633fcad964856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b158015611a5457600080fd5b505afa158015611a68573d6000803e3d6000fd5b505050506040513d6060811015611a7e57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015611b1957600080fd5b505afa158015611b2d573d6000803e3d6000fd5b505050506040513d6020811015611b4357600080fd5b810190808051906020019092919050505090506000821115611cc8578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611c1a57600080fd5b505af1158015611c2e573d6000803e3d6000fd5b505050506040513d6020811015611c4457600080fd5b8101908080519060200190929190505050611cc7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff2816868686866040518563ffffffff1660e01b8152600401808060200180602001858152602001848152602001838103835287818151815260200191508051906020019080838360005b83811015611d47578082015181840152602081019050611d2c565b50505050905090810190601f168015611d745780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b83811015611dad578082015181840152602081019050611d92565b50505050905090810190601f168015611dda5780820380516001836020036101000a031916815260200191505b509650505050505050600060405180830381600087803b158015611dfd57600080fd5b505af1158015611e11573d6000803e3d6000fd5b505050505050505050565b60056020528160005260406000208181548110611e3557fe5b90600052602060002001600091509150505481565b60095481565b60606006805480602002602001604051908101604052809291908181526020018280548015611e9e57602002820191906000526020600020905b815481526020019060010190808311611e8a575b5050505050905090565b600b5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f059f3e86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015611f2d57600080fd5b505afa158015611f41573d6000803e3d6000fd5b505050506040513d6060811015611f5757600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6000600880549050905090565b600080600080600680549050905060008111156120785760008190505b6000811115612055578560066001830381548110611fcd57fe5b9060005260206000200154101580156120245750600015156004600060066001850381548110611ff957fe5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff161515145b15612047576006600182038154811061203957fe5b906000526020600020015492505b808060019003915050611fb3565b50600082111561207757600161206a83612d14565b839350935093505061208b565b5b6000806000819150809050935093509350505b9193909250565b6000600882815481106120a157fe5b90600052602060002001549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b15801561211c57600080fd5b505afa158015612130573d6000803e3d6000fd5b505050506040513d602081101561214657600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561221457600080fd5b505af1158015612228573d6000803e3d6000fd5b505050506040513d602081101561223e57600080fd5b81019080805190602001909291905050506122c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5472616e73666572206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561231c57600080fd5b505af1158015612330573d6000803e3d6000fd5b50505050505050565b600c5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b6000151561240f83612668565b151514612484576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f54696d657374616d7020697320616c726561647920736574000000000000000081525060200191505060405180910390fd5b80600360008481526020019081526020016000208190555060016002600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506006829080600181540180825580915050906001820390600052602060002001600090919290919091505550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c0826040518082815260200191505060405180910390a25050565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b600080612568600c54611f96565b600e60008295508391905055829450505050811561262b5761258b600d54611f96565b600f60008295508391905055829450505050811561262a57600e54600f5411156125cb576001601060006101000a81548160ff0219169083151502179055505b6001601060016101000a81548160ff0219169083151502179055507fbbdea414ca4370d674fd5e370fbc6d7da2dafff34ec019faaf1c36b1180a314b600e54600f54604051808381526020018281526020019250505060405180910390a15b5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060019054906101000a900460ff1681565b60006002600083815260200190815260200160002060009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612755576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060078054806020026020016040519081016040528092919081815260200182805480156127e657602002820191906000526020600020905b8154815260200190600101908083116127d2575b5050505050905090565b6060600880548060200260200160405190810160405280929190818152602001828054801561283e57602002820191906000526020600020905b81548152602001906001019080831161282a575b5050505050905090565b600a5481565b601060009054906101000a900460ff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb19e296348585856040518563ffffffff1660e01b8152600401808060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156128fb5780820151818401526020810190506128e0565b50505050905090810190601f1680156129285780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b83811015612961578082015181840152602081019050612946565b50505050905090810190601f16801561298e5780820380516001836020036101000a031916815260200191505b50955050505050506000604051808303818588803b1580156129af57600080fd5b505af11580156129c3573d6000803e3d6000fd5b5050505050505050565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d09cc57e856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b158015612a4457600080fd5b505afa158015612a58573d6000803e3d6000fd5b505050506040513d6060811015612a6e57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d269a83c86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015612b1f57600080fd5b505afa158015612b33573d6000803e3d6000fd5b505050506040513d6060811015612b4957600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b606060056000838152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612bda57602002820191906000526020600020905b815481526020019060010190808311612bc6575b50505050509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612ca9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015612d11573d6000803e3d6000fd5b50565b600060036000838152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612df4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f53656e646572206973206e6f74206f776e65720000000000000000000000000081525060200191505060405180910390fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe56616c756520666f72207468652074696d657374616d70206265696e6720646973707574656420646f65736e2774206578697374a265627a7a7231582013840bfd831d1175d619b958642172cdf41cf10e88535e6a46e66d42a83191f764736f6c63430005100032",
  "sourceMap": "158:2431:17:-;;;1216:259;8:9:-1;5:2;;;30:1;27;20:12;5:2;1216:259:17;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1216:259:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;1216:259:17;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1216:259:17;;;;;;;;;;;;;;;;;;;;;;1390:13;1405:19;1426:14;1442:11;1455:12;2593:13:1;745::5;711:18;;:48;;;;;;;;;;;;;;;;;;777:10;769:5;;:18;;;;;;;;;;;;;;;;;;659:135;2635:19:1;2622:10;:32;;;;2680:14;2664:13;:30;;;;2718:12;2704:11;:26;;;;2753:11;2740:10;:24;;;;;;;;;;;;:::i;:::-;;2418:353;;;;;1216:259:17;;;;;158:2431;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "158:2431:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4975:2955:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4975:2955:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4975:2955:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10173:207;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10173:207:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;297:23:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;297:23:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5327:154:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5327:154:5;;;;;;;;;;;;;;;;;:::i;:::-;;3854:773:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3854:773:1;;;;;;;;;;;;;;;;;:::i;:::-;;9644:152;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9644:152:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9644:152:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1645:175:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1645:175:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1645:175:17;;;;;;;;;;;;;;;;;:::i;:::-;;388:39:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;388:39:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;388:39:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;589:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;589:46:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;589:46:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;234:26:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;234:26:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;266:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;266:25:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1074:197:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1074:197:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1074:197:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3734:391;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3734:391:5;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3734:391:5;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3734:391:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3734:391:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3734:391:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3734:391:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3734:391:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3734:391:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3734:391:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3734:391:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;718:55:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;718:55:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;718:55:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1217:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1217:26:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10506:100;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10506:100:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10506:100:1;;;;;;;;;;;;;;;;;1294:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1294:28:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2235:232:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2235:232:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2235:232:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11546:119:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11546:119:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8437:639;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8437:639:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8437:639:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12326:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12326:132:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12326:132:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4831:273:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4831:273:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4831:273:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;200:28:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;200:28:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2995:685:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2995:685:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2995:685:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12104:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12104:119:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12104:119:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2059:528:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2059:528:17;;;:::i;:::-;;388:28:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;388:28:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;352:25:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;352:25:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9951:110:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9951:110:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9951:110:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5594:203:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5594:203:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5594:203:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;10762:100:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10762:100:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10762:100:1;;;;;;;;;;;;;;;;;11791:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11791:113:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11791:113:1;;;;;;;;;;;;;;;;;1249:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1249:25:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;326:20:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;326:20:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4452:220:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4452:220:5;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4452:220:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4452:220:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4452:220:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4452:220:5;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4452:220:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4452:220:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4452:220:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4452:220:5;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1632:168;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1632:168:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1632:168:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:259;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2819:259:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2819:259:5;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11245:146:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11245:146:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11245:146:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11245:146:1;;;;;;;;;;;;;;;;;8031:156;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8031:156:1;;;:::i;:::-;;9234:141;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9234:141:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9234:141:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5895:211:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5895:211:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5895:211:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;4975:2955:1;5036:14;5052:12;5292:20;5328:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5328:41:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5328:41:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5328:41:1;;;;;;;;;;;;;;;;5292:78;;5380:18;5408;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5408:41:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5408:41:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5408:41:1;;;;;;;;;;;;;;;;5380:70;;5460:27;5497:23;5523:7;:17;;;5549:4;5523:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5523:32:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5523:32:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5523:32:1;;;;;;;;;;;;;;;;5497:58;;5744:9;5756:1;5744:13;;5739:2185;5764:10;:17;;;;5759:1;:22;5739:2185;;6029:40;6055:1;6058:10;6029:25;:40::i;:::-;5988:81;;;;;;;;;;;;6087:7;6083:1831;;;6114:16;6178:11;;6156:19;:33;;;;;;6133:19;:57;6114:76;;6342:17;6500:1;6462:18;:28;6481:8;6462:28;;;;;;;;;;;:35;;;;:39;6402:18;:28;6421:8;6402:28;;;;;;;;;;;:35;;;;6372:17;:27;6390:8;6372:27;;;;;;;;;;;;:65;6363:6;:74;6362:140;;;;;;6342:160;;6622:9;6592:17;:27;6610:8;6592:27;;;;;;;;;;;:39;;;;6654:38;6672:8;6682:9;6654:38;;;;;;;;;;;;;;;;;;;;;;;;6830:18;:28;6849:8;6830:28;;;;;;;;;;;6864:1;6830:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6830:36:1;;;;;;;;;;;;;;;;;;;;;;7216:5;7195:26;;:7;:17;7203:8;7195:17;;;;;;;;;;;;;;;;;;;;;:26;;;7191:317;;;7245:10;7261:8;7245:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7245:25:1;;;;;;;;;;;;;;;;;;;;;;7312:4;7292:7;:17;7300:8;7292:17;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;7355:8;7343:29;7365:6;7343:29;;;;;;;;;;;;;;;;;;7191:317;;;7429:4;7401:32;;:14;:24;7416:8;7401:24;;;;;;;;;;;;;;;;;;;;;:32;;;7397:111;;;7484:5;7457:14;:24;7472:8;7457:24;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;7397:111;7191:317;6083:1831;;;;;7741:10;:17;;;;7706:7;:17;;;7732:4;7706:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7706:32:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7706:32:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7706:32:1;;;;;;;;;;;;;;;;:52;7702:212;;;7841:11;:18;;;7860:1;7881:10;:17;;;;7863:15;:35;;;;;;7841:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7841:58:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7841:58:1;;;;7702:212;6083:1831;5783:3;;;;;;;5739:2185;;;;4975:2955;;;;;;;:::o;10173:207::-;10223:7;10270:1;10250:10;:17;;;;:21;10242:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10316;10339:10;10370:1;10350:10;:17;;;;:21;10339:33;;;;;;;;;;;;;;;;10316:22;:57::i;:::-;10309:64;;10173:207;:::o;297:23:17:-;;;;:::o;5327:154:5:-;5410:18;;;;;;;;;;;5397:48;;;5452:9;5463:10;5397:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5397:77:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5397:77:5;;;;;5327:154;:::o;3854:773:1:-;3954:10;;3941:9;:23;;3933:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4094:7;:19;4102:10;4094:19;;;;;;;;;;;;;;;;;;;;;4086:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4276:13;;4263:10;:26;4247:11;;4241:3;:17;;;;;;4234:3;:25;:55;;4226:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4423:4;4394:14;:26;4409:10;4394:26;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;4501:19;4526:10;4501:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4501:36:1;;;;;;;;;;;;;;;;;;;;;;4552:68;4566:10;4578;4590:17;:29;4608:10;4590:29;;;;;;;;;;;;4552:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3854:773;:::o;9644:152::-;9726:7;9752:18;:30;9771:10;9752:30;;;;;;;;;;;:37;;;;9745:44;;9644:152;;;:::o;1645:175:17:-;1740:11;;1734:3;:17;;;;;;1727:3;:25;1711:13;:41;;;;1804:9;1789:11;;1783:3;:17;;;;;;1776:3;:25;:37;1762:11;:51;;;;1645:175;:::o;388:39:1:-;;;;;;;;;;;;;;;;;;;;;;:::o;589:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;234:26:17:-;;;;:::o;266:25::-;;;;:::o;1074:197:5:-;1140:15;1157:13;1172:27;1218:18;;;;;;;;;;;:34;;;1253:10;1218:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1218:46:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1218:46:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1218:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1211:53;;;;;;1074:197;;;;;:::o;3734:391::-;3855:14;3879:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3879:41:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3879:41:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3879:41:5;;;;;;;;;;;;;;;;3855:66;;3942:1;3935:4;:8;3931:120;;;3967:7;:20;;;3988:10;4008:4;4015;3967:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3967:53:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3967:53:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3967:53:5;;;;;;;;;;;;;;;;3959:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3931:120;4060:7;:19;;;4080:8;4090:7;4099:12;4113:4;4060:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4060:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4060:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4060:58:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4060:58:5;;;;3734:391;;;;;:::o;718:55:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1217:26::-;;;;:::o;10506:100::-;10554:16;10589:10;10582:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10506:100;:::o;1294:28::-;;;;:::o;2235:232:5:-;2331:4;2337:7;2346:27;2392:18;;;;;;;;;;;:44;;;2437:10;2449;2392:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2392:68:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2392:68:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2392:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2385:75;;;;;;2235:232;;;;;:::o;11546:119:1:-;11606:7;11632:19;:26;;;;11625:33;;11546:119;:::o;8437:639::-;8516:4;8522:7;8531:27;8570:14;8587:10;:17;;;;8570:34;;8627:1;8618:6;:10;8614:426;;;8649:9;8661:6;8649:18;;8644:232;8673:1;8669;:5;8644:232;;;8724:10;8703;8718:1;8714;:5;8703:17;;;;;;;;;;;;;;;;:31;;:77;;;;;8775:5;8738:42;;:14;:33;8753:10;8768:1;8764;:5;8753:17;;;;;;;;;;;;;;;;8738:33;;;;;;;;;;;;;;;;;;;;;:42;;;8703:77;8699:163;;;8826:10;8841:1;8837;:5;8826:17;;;;;;;;;;;;;;;;8804:39;;8699:163;8676:3;;;;;;;;8644:232;;;;8915:1;8893:19;:23;8889:141;;;8944:4;8950:43;8973:19;8950:22;:43::i;:::-;8995:19;8936:79;;;;;;;;;8889:141;8614:426;9057:5;9064:1;9067;9049:20;;;;;;;;;;;;;8437:639;;;;;;:::o;12326:132::-;12398:7;12424:19;12444:6;12424:27;;;;;;;;;;;;;;;;12417:34;;12326:132;;;:::o;4831:273:5:-;4898:14;4922:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4922:41:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4922:41:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4922:41:5;;;;;;;;;;;;;;;;4898:66;;4982:7;:20;;;5003:10;5023:4;5030;4982:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4982:53:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4982:53:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4982:53:5;;;;;;;;;;;;;;;;4974:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5065:7;:14;;;5080:10;5092:4;5065:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5065:32:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5065:32:5;;;;4831:273;;;:::o;200:28:17:-;;;;:::o;2995:685:1:-;3131:5;;;;;;;;;;;3117:19;;:10;:19;;;3109:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3274:5;3248:31;;:22;3259:10;3248;:22::i;:::-;:31;;;3240:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3375:6;3343:17;:29;3361:10;3343:29;;;;;;;;;;;:38;;;;3462:4;3440:7;:19;3448:10;3440:19;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;3525:10;3541;3525:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3525:27:1;;;;;;;;;;;;;;;;;;;;;;3653:10;3641:31;3665:6;3641:31;;;;;;;;;;;;;;;;;;2995:685;;:::o;12104:119::-;12167:4;12190:14;:26;12205:10;12190:26;;;;;;;;;;;;;;;;;;;;;12183:33;;12104:119;;;:::o;2059:528:17:-;2105:12;2127:13;2181:43;2210:13;;2181:28;:43::i;:::-;2160:10;;2150:74;;;;;;;;;;;;;;2238:7;2234:347;;;2290:41;2319:11;;2290:28;:41::i;:::-;2271:8;;2261:70;;;;;;;;;;;;;;2349:7;2345:226;;;2391:10;;2380:8;;:21;2376:83;;;2436:4;2425:8;;:15;;;;;;;;;;;;;;;;;;2376:83;2492:4;2476:13;;:20;;;;;;;;;;;;;;;;;;2519:37;2535:10;;2547:8;;2519:37;;;;;;;;;;;;;;;;;;;;;;;;2345:226;2234:347;2059:528;;:::o;388:28:5:-;;;;;;;;;;;;;:::o;352:25:17:-;;;;;;;;;;;;;:::o;9951:110:1:-;10012:4;10035:7;:19;10043:10;10035:19;;;;;;;;;;;;;;;;;;;;;10028:26;;9951:110;;;:::o;5594:203:5:-;5681:5;;;;;;;;;;;5667:19;;:10;:19;;;5659:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5776:13;5742:18;;:48;;;;;;;;;;;;;;;;;;5594:203;:::o;10762:100:1:-;10810:16;10845:10;10838:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10762:100;:::o;11791:113::-;11843:16;11878:19;11871:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11791:113;:::o;1249:25::-;;;;:::o;326:20:17:-;;;;;;;;;;;;;:::o;4452:220:5:-;4576:18;;;;;;;;;;;:39;;;4622:9;4633:8;4643:7;4652:12;4576:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4576:89:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4576:89:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4576:89:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4576:89:5;;;;;4452:220;;;:::o;1632:168::-;1690:17;1708:14;1724:13;1755:18;;;;;;;;;;;:28;;;1784:8;1755:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1755:38:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1755:38:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1755:38:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1748:45;;;;;;1632:168;;;;;:::o;2819:259::-;2929:16;2947:14;2963:27;3013:18;;;;;;;;;;;:34;;;3048:10;3060;3013:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3013:58:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3013:58:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3013:58:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3006:65;;;;;;2819:259;;;;;:::o;11245:146:1:-;11319:16;11354:18;:30;11373:10;11354:30;;;;;;;;;;;11347:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11245:146;;;:::o;8031:156::-;8095:5;;;;;;;;;;;8081:19;;:10;:19;;;8073:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8142:5;;;;;;;;;;;8134:23;;:46;8158:21;8134:46;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8134:46:1;8031:156::o;9234:141::-;9307:13;9339:17;:29;9357:10;9339:29;;;;;;;;;;;;9332:36;;9234:141;;;:::o;5895:211:5:-;5990:5;;;;;;;;;;;5976:19;;:10;:19;;;5968:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6034:38;6055:5;;;;;;;;;;;6062:9;6034:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6090:9;6082:5;;:17;;;;;;;;;;;;;;;;;;5895:211;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../Optimistic.sol\";\n/**\n* @title Reader\n* This contracts is a pretend contract using Tellor that compares two time values\n*/\ncontract TestContract is Optimistic {\n    uint256 public startDateTime;\n    uint256 public endDateTime;\n    uint256 public startValue;\n    uint256 public endValue;\n    bool public longWins;\n    bool public contractEnded;\n    event ContractSettled(uint256 _svalue, uint256 _evalue);\n    /**\n    * @dev This constructor function is used to pass variables to the optimistic contract's constructor\n    * and the function is blank\n    * @param _userContract address for UserContract\n    * @param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\n    * @param _disputePeriod is the time frame a value can be disputed after being imputed\n    * @param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\n    * It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor\n    * System be sure to create some.\n    * @param _granularity is the amount of decimals desired on the requested value\n    */\n    constructor(address _userContract, uint256 _disputeFeeRequired, uint256 _disputePeriod, uint256[] memory _requestIds, uint256 _granularity)\n        public\n        Optimistic(_userContract, _disputeFeeRequired, _disputePeriod, _requestIds, _granularity)\n    {}\n\n    /**\n    * @dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\n    * @param _duration in seconds\n    */\n    function setContractDetails(uint256 _duration) external {\n        startDateTime = now - (now % granularity);\n        endDateTime = now - (now % granularity) + _duration;\n    }\n\n    /**\n    * @dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\n    * and the first undisputed value after the end time of the contract and settleling(payin off) it.\n    */\n    function settleContracts() external {\n        bool _didGet;\n        uint256 _time;\n        (_didGet, startValue, _time) = getFirstUndisputedValueAfter(startDateTime);\n        if (_didGet) {\n            (_didGet, endValue, _time) = getFirstUndisputedValueAfter(endDateTime);\n            if (_didGet) {\n                if (endValue > startValue) {\n                    longWins = true;\n                }\n                contractEnded = true;\n                emit ContractSettled(startValue, endValue);\n            }\n        }\n    }\n}\n",
  "sourcePath": "C:\\Users\\Frenchy\\Documents\\tellor\\firstTest\\Tellor_first_test\\contracts\\testContracts\\TestContract.sol",
  "ast": {
    "absolutePath": "/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/testContracts/TestContract.sol",
    "exportedSymbols": {
      "TestContract": [
        4868
      ]
    },
    "id": 4869,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4746,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "absolutePath": "/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/Optimistic.sol",
        "file": "../Optimistic.sol",
        "id": 4747,
        "nodeType": "ImportDirective",
        "scope": 4869,
        "sourceUnit": 637,
        "src": "25:27:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4748,
              "name": "Optimistic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 636,
              "src": "183:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Optimistic_$636",
                "typeString": "contract Optimistic"
              }
            },
            "id": 4749,
            "nodeType": "InheritanceSpecifier",
            "src": "183:10:17"
          }
        ],
        "contractDependencies": [
          636,
          1652,
          1666
        ],
        "contractKind": "contract",
        "documentation": "@title Reader\nThis contracts is a pretend contract using Tellor that compares two time values",
        "fullyImplemented": true,
        "id": 4868,
        "linearizedBaseContracts": [
          4868,
          636,
          1652,
          1666
        ],
        "name": "TestContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4751,
            "name": "startDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 4868,
            "src": "200:28:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4750,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "200:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4753,
            "name": "endDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 4868,
            "src": "234:26:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4752,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "234:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4755,
            "name": "startValue",
            "nodeType": "VariableDeclaration",
            "scope": 4868,
            "src": "266:25:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4754,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4757,
            "name": "endValue",
            "nodeType": "VariableDeclaration",
            "scope": 4868,
            "src": "297:23:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4756,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "297:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4759,
            "name": "longWins",
            "nodeType": "VariableDeclaration",
            "scope": 4868,
            "src": "326:20:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4758,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "326:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4761,
            "name": "contractEnded",
            "nodeType": "VariableDeclaration",
            "scope": 4868,
            "src": "352:25:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4760,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "352:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4767,
            "name": "ContractSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4763,
                  "indexed": false,
                  "name": "_svalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 4767,
                  "src": "405:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4765,
                  "indexed": false,
                  "name": "_evalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 4767,
                  "src": "422:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "404:34:17"
            },
            "src": "383:56:17"
          },
          {
            "body": {
              "id": 4788,
              "nodeType": "Block",
              "src": "1473:2:17",
              "statements": []
            },
            "documentation": "@dev This constructor function is used to pass variables to the optimistic contract's constructor\nand the function is blank\n@param _userContract address for UserContract\n@param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\n@param _disputePeriod is the time frame a value can be disputed after being imputed\n@param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\nIt is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor\nSystem be sure to create some.\n@param _granularity is the amount of decimals desired on the requested value",
            "id": 4789,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4781,
                    "name": "_userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4769,
                    "src": "1390:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4782,
                    "name": "_disputeFeeRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4771,
                    "src": "1405:19:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4783,
                    "name": "_disputePeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4773,
                    "src": "1426:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4784,
                    "name": "_requestIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4776,
                    "src": "1442:11:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4785,
                    "name": "_granularity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4778,
                    "src": "1455:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4786,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4780,
                  "name": "Optimistic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 636,
                  "src": "1379:10:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Optimistic_$636_$",
                    "typeString": "type(contract Optimistic)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1379:89:17"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4769,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4789,
                  "src": "1228:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4771,
                  "name": "_disputeFeeRequired",
                  "nodeType": "VariableDeclaration",
                  "scope": 4789,
                  "src": "1251:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4773,
                  "name": "_disputePeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 4789,
                  "src": "1280:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1280:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4776,
                  "name": "_requestIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 4789,
                  "src": "1304:28:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4774,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1304:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4775,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1304:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4778,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 4789,
                  "src": "1334:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1227:128:17"
            },
            "returnParameters": {
              "id": 4787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1473:0:17"
            },
            "scope": 4868,
            "src": "1216:259:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4814,
              "nodeType": "Block",
              "src": "1701:119:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4794,
                      "name": "startDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4751,
                      "src": "1711:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4795,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4885,
                        "src": "1727:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 4796,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4885,
                              "src": "1734:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 4797,
                              "name": "granularity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "1740:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1734:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 4799,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1733:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1727:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1711:41:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4802,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:41:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4803,
                      "name": "endDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4753,
                      "src": "1762:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4804,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4885,
                          "src": "1776:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 4805,
                                "name": "now",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4885,
                                "src": "1783:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 4806,
                                "name": "granularity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69,
                                "src": "1789:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1783:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4808,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1782:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1776:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 4810,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4791,
                        "src": "1804:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1776:37:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1762:51:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4813,
                  "nodeType": "ExpressionStatement",
                  "src": "1762:51:17"
                }
              ]
            },
            "documentation": "@dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\n@param _duration in seconds",
            "id": 4815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4791,
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 4815,
                  "src": "1673:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1673:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1672:19:17"
            },
            "returnParameters": {
              "id": 4793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1701:0:17"
            },
            "scope": 4868,
            "src": "1645:175:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4866,
              "nodeType": "Block",
              "src": "2095:492:17",
              "statements": [
                {
                  "assignments": [
                    4819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4819,
                      "name": "_didGet",
                      "nodeType": "VariableDeclaration",
                      "scope": 4866,
                      "src": "2105:12:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4818,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2105:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4820,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2105:12:17"
                },
                {
                  "assignments": [
                    4822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4822,
                      "name": "_time",
                      "nodeType": "VariableDeclaration",
                      "scope": 4866,
                      "src": "2127:13:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4821,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2127:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4823,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2127:13:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 4824,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4819,
                          "src": "2151:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4825,
                          "name": "startValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4755,
                          "src": "2160:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4826,
                          "name": "_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4822,
                          "src": "2172:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4827,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2150:28:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4829,
                          "name": "startDateTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4751,
                          "src": "2210:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4828,
                        "name": "getFirstUndisputedValueAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "2181:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                        }
                      },
                      "id": 4830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2181:43:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "src": "2150:74:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4832,
                  "nodeType": "ExpressionStatement",
                  "src": "2150:74:17"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4833,
                    "name": "_didGet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4819,
                    "src": "2238:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4865,
                  "nodeType": "IfStatement",
                  "src": "2234:347:17",
                  "trueBody": {
                    "id": 4864,
                    "nodeType": "Block",
                    "src": "2247:334:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 4834,
                                "name": "_didGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4819,
                                "src": "2262:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4835,
                                "name": "endValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4757,
                                "src": "2271:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4836,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4822,
                                "src": "2281:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4837,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2261:26:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4839,
                                "name": "endDateTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4753,
                                "src": "2319:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4838,
                              "name": "getFirstUndisputedValueAfter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "2290:28:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                              }
                            },
                            "id": 4840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2290:41:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "src": "2261:70:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4842,
                        "nodeType": "ExpressionStatement",
                        "src": "2261:70:17"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 4843,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4819,
                          "src": "2349:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 4863,
                        "nodeType": "IfStatement",
                        "src": "2345:226:17",
                        "trueBody": {
                          "id": 4862,
                          "nodeType": "Block",
                          "src": "2358:213:17",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 4844,
                                  "name": "endValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4757,
                                  "src": "2380:8:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 4845,
                                  "name": "startValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4755,
                                  "src": "2391:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2380:21:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 4852,
                              "nodeType": "IfStatement",
                              "src": "2376:83:17",
                              "trueBody": {
                                "id": 4851,
                                "nodeType": "Block",
                                "src": "2403:56:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4849,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 4847,
                                        "name": "longWins",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4759,
                                        "src": "2425:8:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 4848,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2436:4:17",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "2425:15:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4850,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2425:15:17"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 4855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 4853,
                                  "name": "contractEnded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4761,
                                  "src": "2476:13:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 4854,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2492:4:17",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2476:20:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4856,
                              "nodeType": "ExpressionStatement",
                              "src": "2476:20:17"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4858,
                                    "name": "startValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4755,
                                    "src": "2535:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 4859,
                                    "name": "endValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4757,
                                    "src": "2547:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4857,
                                  "name": "ContractSettled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4767,
                                  "src": "2519:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 4860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2519:37:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4861,
                              "nodeType": "EmitStatement",
                              "src": "2514:42:17"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\nand the first undisputed value after the end time of the contract and settleling(payin off) it.",
            "id": 4867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2083:2:17"
            },
            "returnParameters": {
              "id": 4817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2095:0:17"
            },
            "scope": 4868,
            "src": "2059:528:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4869,
        "src": "158:2431:17"
      }
    ],
    "src": "0:2590:17"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/testContracts/TestContract.sol",
    "exportedSymbols": {
      "TestContract": [
        4868
      ]
    },
    "id": 4869,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4746,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:17"
      },
      {
        "absolutePath": "/C/Users/Frenchy/Documents/tellor/firstTest/Tellor_first_test/contracts/Optimistic.sol",
        "file": "../Optimistic.sol",
        "id": 4747,
        "nodeType": "ImportDirective",
        "scope": 4869,
        "sourceUnit": 637,
        "src": "25:27:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4748,
              "name": "Optimistic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 636,
              "src": "183:10:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Optimistic_$636",
                "typeString": "contract Optimistic"
              }
            },
            "id": 4749,
            "nodeType": "InheritanceSpecifier",
            "src": "183:10:17"
          }
        ],
        "contractDependencies": [
          636,
          1652,
          1666
        ],
        "contractKind": "contract",
        "documentation": "@title Reader\nThis contracts is a pretend contract using Tellor that compares two time values",
        "fullyImplemented": true,
        "id": 4868,
        "linearizedBaseContracts": [
          4868,
          636,
          1652,
          1666
        ],
        "name": "TestContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4751,
            "name": "startDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 4868,
            "src": "200:28:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4750,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "200:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4753,
            "name": "endDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 4868,
            "src": "234:26:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4752,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "234:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4755,
            "name": "startValue",
            "nodeType": "VariableDeclaration",
            "scope": 4868,
            "src": "266:25:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4754,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4757,
            "name": "endValue",
            "nodeType": "VariableDeclaration",
            "scope": 4868,
            "src": "297:23:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4756,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "297:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4759,
            "name": "longWins",
            "nodeType": "VariableDeclaration",
            "scope": 4868,
            "src": "326:20:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4758,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "326:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4761,
            "name": "contractEnded",
            "nodeType": "VariableDeclaration",
            "scope": 4868,
            "src": "352:25:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4760,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "352:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 4767,
            "name": "ContractSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4763,
                  "indexed": false,
                  "name": "_svalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 4767,
                  "src": "405:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4765,
                  "indexed": false,
                  "name": "_evalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 4767,
                  "src": "422:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "404:34:17"
            },
            "src": "383:56:17"
          },
          {
            "body": {
              "id": 4788,
              "nodeType": "Block",
              "src": "1473:2:17",
              "statements": []
            },
            "documentation": "@dev This constructor function is used to pass variables to the optimistic contract's constructor\nand the function is blank\n@param _userContract address for UserContract\n@param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\n@param _disputePeriod is the time frame a value can be disputed after being imputed\n@param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\nIt is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor\nSystem be sure to create some.\n@param _granularity is the amount of decimals desired on the requested value",
            "id": 4789,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 4781,
                    "name": "_userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4769,
                    "src": "1390:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4782,
                    "name": "_disputeFeeRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4771,
                    "src": "1405:19:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4783,
                    "name": "_disputePeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4773,
                    "src": "1426:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4784,
                    "name": "_requestIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4776,
                    "src": "1442:11:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 4785,
                    "name": "_granularity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4778,
                    "src": "1455:12:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4786,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4780,
                  "name": "Optimistic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 636,
                  "src": "1379:10:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Optimistic_$636_$",
                    "typeString": "type(contract Optimistic)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1379:89:17"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4769,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 4789,
                  "src": "1228:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4771,
                  "name": "_disputeFeeRequired",
                  "nodeType": "VariableDeclaration",
                  "scope": 4789,
                  "src": "1251:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1251:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4773,
                  "name": "_disputePeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 4789,
                  "src": "1280:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1280:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4776,
                  "name": "_requestIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 4789,
                  "src": "1304:28:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4774,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1304:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4775,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1304:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4778,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 4789,
                  "src": "1334:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1227:128:17"
            },
            "returnParameters": {
              "id": 4787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1473:0:17"
            },
            "scope": 4868,
            "src": "1216:259:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4814,
              "nodeType": "Block",
              "src": "1701:119:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4794,
                      "name": "startDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4751,
                      "src": "1711:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4795,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4885,
                        "src": "1727:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 4796,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4885,
                              "src": "1734:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 4797,
                              "name": "granularity",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "1740:11:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1734:17:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 4799,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1733:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1727:25:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1711:41:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4802,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:41:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4803,
                      "name": "endDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4753,
                      "src": "1762:11:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 4804,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4885,
                          "src": "1776:3:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 4805,
                                "name": "now",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4885,
                                "src": "1783:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 4806,
                                "name": "granularity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69,
                                "src": "1789:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1783:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4808,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1782:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1776:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 4810,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4791,
                        "src": "1804:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1776:37:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1762:51:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4813,
                  "nodeType": "ExpressionStatement",
                  "src": "1762:51:17"
                }
              ]
            },
            "documentation": "@dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\n@param _duration in seconds",
            "id": 4815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4791,
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 4815,
                  "src": "1673:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1673:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1672:19:17"
            },
            "returnParameters": {
              "id": 4793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1701:0:17"
            },
            "scope": 4868,
            "src": "1645:175:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4866,
              "nodeType": "Block",
              "src": "2095:492:17",
              "statements": [
                {
                  "assignments": [
                    4819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4819,
                      "name": "_didGet",
                      "nodeType": "VariableDeclaration",
                      "scope": 4866,
                      "src": "2105:12:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 4818,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2105:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4820,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2105:12:17"
                },
                {
                  "assignments": [
                    4822
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4822,
                      "name": "_time",
                      "nodeType": "VariableDeclaration",
                      "scope": 4866,
                      "src": "2127:13:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4821,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2127:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4823,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2127:13:17"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 4824,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4819,
                          "src": "2151:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4825,
                          "name": "startValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4755,
                          "src": "2160:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 4826,
                          "name": "_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4822,
                          "src": "2172:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4827,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2150:28:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4829,
                          "name": "startDateTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4751,
                          "src": "2210:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4828,
                        "name": "getFirstUndisputedValueAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "2181:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                        }
                      },
                      "id": 4830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2181:43:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "src": "2150:74:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4832,
                  "nodeType": "ExpressionStatement",
                  "src": "2150:74:17"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 4833,
                    "name": "_didGet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4819,
                    "src": "2238:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4865,
                  "nodeType": "IfStatement",
                  "src": "2234:347:17",
                  "trueBody": {
                    "id": 4864,
                    "nodeType": "Block",
                    "src": "2247:334:17",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 4834,
                                "name": "_didGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4819,
                                "src": "2262:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4835,
                                "name": "endValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4757,
                                "src": "2271:8:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4836,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4822,
                                "src": "2281:5:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4837,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2261:26:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 4839,
                                "name": "endDateTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4753,
                                "src": "2319:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4838,
                              "name": "getFirstUndisputedValueAfter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "2290:28:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                              }
                            },
                            "id": 4840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2290:41:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "src": "2261:70:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4842,
                        "nodeType": "ExpressionStatement",
                        "src": "2261:70:17"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 4843,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4819,
                          "src": "2349:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 4863,
                        "nodeType": "IfStatement",
                        "src": "2345:226:17",
                        "trueBody": {
                          "id": 4862,
                          "nodeType": "Block",
                          "src": "2358:213:17",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 4844,
                                  "name": "endValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4757,
                                  "src": "2380:8:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 4845,
                                  "name": "startValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4755,
                                  "src": "2391:10:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2380:21:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 4852,
                              "nodeType": "IfStatement",
                              "src": "2376:83:17",
                              "trueBody": {
                                "id": 4851,
                                "nodeType": "Block",
                                "src": "2403:56:17",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4849,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 4847,
                                        "name": "longWins",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4759,
                                        "src": "2425:8:17",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 4848,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2436:4:17",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "2425:15:17",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 4850,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2425:15:17"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 4855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 4853,
                                  "name": "contractEnded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4761,
                                  "src": "2476:13:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 4854,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2492:4:17",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2476:20:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4856,
                              "nodeType": "ExpressionStatement",
                              "src": "2476:20:17"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 4858,
                                    "name": "startValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4755,
                                    "src": "2535:10:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 4859,
                                    "name": "endValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4757,
                                    "src": "2547:8:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4857,
                                  "name": "ContractSettled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4767,
                                  "src": "2519:15:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 4860,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2519:37:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4861,
                              "nodeType": "EmitStatement",
                              "src": "2514:42:17"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\nand the first undisputed value after the end time of the contract and settleling(payin off) it.",
            "id": 4867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2083:2:17"
            },
            "returnParameters": {
              "id": 4817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2095:0:17"
            },
            "scope": 4868,
            "src": "2059:528:17",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 4869,
        "src": "158:2431:17"
      }
    ],
    "src": "0:2590:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-02-20T22:47:02.847Z",
  "devdoc": {
    "methods": {
      "addTip(uint256,uint256)": {
        "details": "Allows the user to tip miners for the specified request using Tributes",
        "params": {
          "_requestId": "to tip",
          "_tip": "amount"
        }
      },
      "addTipWithEther(uint256)": {
        "details": "Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes at the price specified by the userContract owner.",
        "params": {
          "_requestId": "to tip"
        }
      },
      "constructor": {
        "details": "This constructor function is used to pass variables to the optimistic contract's constructor and the function is blank",
        "params": {
          "_disputeFeeRequired": "the fee to dispute the optimistic price(price sumbitted by known trusted party)",
          "_disputePeriod": "is the time frame a value can be disputed after being imputed",
          "_granularity": "is the amount of decimals desired on the requested value",
          "_requestIds": "are the requests Id's on the Tellor System corresponding to the data types used on this contract. It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor System be sure to create some.",
          "_userContract": "address for UserContract"
        }
      },
      "disputeOptimisticValue(uint256)": {
        "details": "allows user to initiate dispute on the value of the specified timestamp",
        "params": {
          "_timestamp": "is the timestamp for the value to be disputed"
        }
      },
      "getAnyDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first value for the requestId after the specified timestamp",
        "params": {
          "_requestId": "is the requestId to look up the value for",
          "_timestamp": "after which to search for first verified value"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp"
      },
      "getCurrentValue()": {
        "details": "Getter function for latest value available",
        "return": "latest value available"
      },
      "getCurrentValue(uint256)": {
        "details": "Allows the user to get the latest value for the requestId specified",
        "params": {
          "_requestId": "is the requestId to look up the value for"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp"
      },
      "getDisputedValueByIndex(uint256)": {
        "details": "Getter function for the dispute value by index",
        "return": "the value"
      },
      "getDisputedValues()": {
        "details": "Getter function for all disputed values",
        "return": "the array with all values under dispute"
      },
      "getFirstUndisputedValueAfter(uint256)": {
        "details": "Get the first undisputed value after the timestamp specified. This function is used within the getTellorValues but can be used on its own.",
        "params": {
          "_timestamp": "to search the first undisputed value there after"
        }
      },
      "getFirstVerifiedDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first verified value for the requestId after the specified timestamp",
        "params": {
          "_requestId": "is the requestId to look up the value for",
          "_timestamp": "after which to search for first verified value"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after which it searched for the first verified value"
      },
      "getIsValue(uint256)": {
        "details": "Checks to if a value exists for the specifived timestamp",
        "params": {
          "_timestamp": "to verify"
        },
        "return": "ture if it exists"
      },
      "getMyValuesByTimestamp(uint256)": {
        "details": "Getter function for the value based on the timestamp specified",
        "params": {
          "_timestamp": "to retreive value from"
        }
      },
      "getNumberOfDisputedValues()": {
        "details": "Getter function for the number of disputed values",
        "return": "uint count of number of values for the spedified timestamp"
      },
      "getNumberOfValuesPerTimestamp(uint256)": {
        "details": "Getter function for the number of RequestIds associated with a timestamp, based on the timestamp specified",
        "params": {
          "_timestamp": "to retreive number of requestIds"
        },
        "return": "uint count of number of values for the spedified timestamp"
      },
      "getRequestIds()": {
        "details": "Getter function for the requests Ids' from Tellor associated with this price feed",
        "return": "uint array of requests Ids'"
      },
      "getRequestIdsIncluded(uint256)": {
        "details": "Getter function for the requests Ids' from Tellor associated with this price feed at the specified timestamp. This only gets populated after a dispute is initiated and the function getTellorValues is ran.",
        "params": {
          "_timestamp": "to retreive the requestIds"
        },
        "return": "uint array of requests Ids' included in the calcluation of the value"
      },
      "getTellorValues(uint256)": {
        "details": "This function gets the Tellor requestIds values for the disputed timestamp. It averages the values on the requestsIds and replaces the value set by the contract owner, centralized party.",
        "params": {
          "_timestamp": "to get Tellor data from"
        },
        "return": "uint of new value and true if it was able to get Tellor data"
      },
      "getTimestamps()": {
        "details": "Getter function for the timestamps available",
        "return": "uint array of timestamps available"
      },
      "isDisputed(uint256)": {
        "details": "This checks if the value for the specified timestamp is under dispute",
        "params": {
          "_timestamp": "to check if it is under dispute"
        },
        "return": "true if it is under dispute"
      },
      "requestData(string,string,uint256,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using Tributes Allowing this prevents us from increasing spread too high (since if we set the price too hight users will just go to an exchange and get tokens from there)",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value",
          "_request": "string API being requested to be mined",
          "_symbol": "is the short string symbol for the api request",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners mine the onDeckQueryHash, or the api with the highest payout pool"
        }
      },
      "requestDataWithEther(string,string,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using ETH",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value",
          "_request": "string API being requested to be mined",
          "_symbol": "is the short string symbol for the api request"
        }
      },
      "resultFor(bytes32)": {
        "details": "Allows the user to get the latest value for the requestId specified using the  ADO specification for the standard inteface for price oracles",
        "params": {
          "_bytesId": "is the ADO standarized bytes32 price/key value pair identifier"
        },
        "return": "the timestamp, outcome or value/ and the status code (for retreived, null, etc...)"
      },
      "setContractDetails(uint256)": {
        "details": "creates a start(now) and end time(now + duration specified) for testing a contract start and end period",
        "params": {
          "_duration": "in seconds"
        }
      },
      "setUserContract(address)": {
        "details": "allows owner to set the user contract address",
        "params": {
          "_userContract": "address"
        }
      },
      "setValue(uint256,uint256)": {
        "details": "allows contract owner, a centralized party to enter value",
        "params": {
          "_timestamp": "is the timestamp for the value",
          "_value": "is the value for the timestamp specified"
        }
      },
      "settleContracts()": {
        "details": "testing fucntion that settles the contract by getting the first undisputed value after the startDateTime and the first undisputed value after the end time of the contract and settleling(payin off) it."
      },
      "transferOwnership(address)": {
        "details": "allows owner to transfer ownership",
        "params": {
          "_newOwner": "address"
        }
      },
      "withdrawETH()": {
        "details": "Allows the contract owner(Tellor) to withdraw ETH from this contract"
      }
    },
    "title": "Reader This contracts is a pretend contract using Tellor that compares two time values"
  },
  "userdoc": {
    "methods": {}
  }
}